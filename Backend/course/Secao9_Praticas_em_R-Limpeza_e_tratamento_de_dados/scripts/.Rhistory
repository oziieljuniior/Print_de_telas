#importa dados, string vazio como NA, string como fatores
dados = read.csv("Churn.csv", sep = ";", na.strings="", stringsAsFactors=T)
#importa dados, string vazio como NA, string como fatores
dados = read.csv("Churn.csv", sep = ";", na.strings="", stringsAsFactors=T)
x = c(1L,2L,1L,2L)
hist(x)
#importa dados, string vazio como NA, string como fatores
dados = read.csv("Churn.csv", sep = ";", na.strings="", stringsAsFactors=T)
head(dados)
summary(dados)
#Dar nomes corretos as colunas
colnames(dados) = c("Id","Score","Estado","Genero","Idade","Patrimonio","Saldo","Produtos","TemCartCredito",
"Ativo","Salario","Saiu")
head(dados)
#Estados
counts = table(dados$Estado)
barplot(counts, main="Estados", xlab="Estados")
#Gênero
counts = table(dados$Genero)
barplot(counts, main="Gêneros", xlab="Gêneros")
#Score
summary(dados$Score)
boxplot(dados$Score)
hist(dados$Score)
summary(dados$Idade)
boxplot(dados$Idade)
hist(dados$Idade)
summary(dados$Saldo)
boxplot(dados$Saldo)
hist(dados$Saldo)
summary(dados$Salario)
boxplot(dados$Salario)
boxplot(dados$Salario,outline = F)
#valores faltantes NAs
dados[!complete.cases(dados),]
#tratar salários
summary(dados$Salario)
#ver mediana
median(dados$Salario,na.rm = T)
#atribuir mediana a NAs
dados[is.na(dados$Salario),]$Salario = median(dados$Salario,na.rm = T)
#buscar NAS em salario para checar
dados[!complete.cases(dados$Salario),]
#Ver valores
unique(dados$Genero)
summary(dados$Genero)
#tranformar F e Fem em Feminino
# "" , M em Masculino (moda)
dados[is.na(dados$Genero) | dados$Genero == "M" ,]$Genero = "Masculino"
dados[dados$Genero == "F" | dados$Genero == "Fem", ]$Genero = "Feminino"
#ver resultado
summary(dados$Genero)
#remover levels não utilizados
dados$Genero =   factor(dados$Genero)
#visualizar novamente
summary(dados$Genero)
summary(dados$Idade)
#fora do dominio, numérico - ver idades anormais
dados[dados$Idade<0 | dados$Idade>110 ,]$Idade
#não temos idade NAs
dados[is.na(dados$Idade),]
#opção, preencher com mediana
median(dados$Idade)
#subtituição
dados[dados$Idade<0 | dados$Idade>110 ,]$Idade = median(dados$Idade)
#buscamos novamente idades anormais
dados[dados$Idade<0 | dados$Idade>110 ,]
summary(dados$Idade)
x =  dados[duplicated(dados$Id),]
x
#verificamos que o ID 81 está duplicado
#vamos excluir pelo ID não pelo indice
dados = dados[ !dados$Id %in% c(x$Id),]
#buscamos a linha que estava duplicada
dados[dados$Id == x$Id ,]
#verificamos novamente duplicados
x =  dados[duplicated(dados$Id),]
x
dados
